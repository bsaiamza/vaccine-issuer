{"version":3,"file":"static/js/572.77d42ebb.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Button.jsx","components/Form.jsx","components/Formik.jsx","components/TextField.jsx","components/Typography.jsx","pages/Connection/modal.jsx","pages/Connection/index.jsx"],"sourcesContent":["import { Box } from '@mui/material'\n\nconst BoxComponent = ({ alt, children, component, src, sx }) => {\n  return (\n    <Box alt={alt} component={component} src={src} sx={sx}>\n      {children}\n    </Box>\n  )\n}\n\nexport default BoxComponent\n","// mui5\nimport { Button } from '@mui/material'\n\nconst ButtonComponent = ({\n  children,\n  color,\n  disabled,\n  endIcon,\n  onClick,\n  size,\n  startIcon,\n  sx,\n  type,\n  variant,\n}) => {\n  return (\n    <Button\n      color={color}\n      disabled={disabled}\n      endIcon={endIcon}\n      onClick={onClick}\n      size={size}\n      sx={sx}\n      startIcon={startIcon}\n      type={type}\n      variant={variant}\n    >\n      {children}\n    </Button>\n  )\n}\n\nexport default ButtonComponent\n","import { Form } from 'formik'\n\nconst FormComponent = ({ children }) => {\n  return <Form>{children}</Form>\n}\n\nexport default FormComponent\n","import { Formik } from 'formik'\n\nconst FormikComponent = ({ children, initialValues, onSubmit, validate }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validate={validate}\n    >\n      {children}\n    </Formik>\n  )\n}\n\nexport default FormikComponent\n","import { TextField } from '@mui/material'\n\nconst FieldComponent = ({\n  defaultValue,\n  disabled,\n  error,\n  focused,\n  fullWidth,\n  helperText,\n  id,\n  InputLabelProps,\n  label,\n  name,\n  onChange,\n  props,\n  required,\n  sx,\n  type,\n  value,\n}) => {\n  return (\n    <TextField\n      defaultValue={defaultValue}\n      disabled={disabled}\n      error={error}\n      focused={focused}\n      fullWidth={fullWidth}\n      helperText={helperText}\n      id={id}\n      InputLabelProps={InputLabelProps}\n      label={label}\n      name={name}\n      onChange={onChange}\n      required={required}\n      sx={sx}\n      type={type}\n      value={value}\n      {...props}\n    />\n  )\n}\n\nexport default FieldComponent\n","import { Typography } from '@mui/material'\n\nconst TypographyComponent = ({ align, children, color, sx, variant }) => {\n  return (\n    <Typography\n      align={align}\n      color={color ? color : '#777'}\n      sx={sx}\n      variant={variant}\n    >\n      {children}\n    </Typography>\n  )\n}\n\nexport default TypographyComponent\n","import { useState } from 'react'\nimport { Avatar, Divider, Modal } from '@mui/material'\nimport { Badge as CredentialIcon } from '@mui/icons-material'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\nimport QRCode from 'react-qr-code'\nimport validate from 'za-id-validator'\n// components\nimport BoxComponent from '../../components/Box'\nimport ButtonComponent from '../../components/Button'\nimport FormikComponent from '../../components/Formik'\nimport FormComponent from '../../components/Form'\nimport TextFieldComponent from '../../components/TextField'\nimport TypographyComponent from '../../components/Typography'\n\nconst idValidation = data => {\n  const errors = {}\n\n  if (validate(data.id_number)) {\n  } else {\n    errors.id_number = 'Invalid ZA ID number!'\n  }\n\n  return errors\n}\n\nconst CredentialModal = ({ connectionId, handleClose, open }) => {\n  const [submitting, setSubmitting] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [data, setData] = useState({})\n\n  const sendOffer = async data => {\n    setSubmitting(true)\n    let apiURL = '/api/v1/cornerstone/issuer/credential'\n\n    if (process.env.API_BASE_URL) {\n      apiURL = process.env.API_BASE_URL + '/cornerstone/issuer/credential'\n    }\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      await toast.promise(\n        axios\n          .post(process.env.REACT_APP_API_URL + 'credential', data)\n          .then(response => {\n            setData(response.data)\n            setSuccess(true)\n            toast.success('Credential qr code generated!')\n          })\n          .catch(error => {\n            toast.error(error.response.data.msg)\n          }),\n        {\n          pending: 'Generating credential qr code...',\n        }\n      )\n    } else {\n      await toast.promise(\n        axios\n          .post(apiURL, data)\n          .then(response => {\n            setData(response.data)\n            setSuccess(true)\n            toast.success('Credential qr code generated!')\n          })\n          .catch(error => {\n            toast.error(error.response.data.msg)\n          }),\n        {\n          pending: 'Generating credential qr code...',\n        }\n      )\n    }\n    setSubmitting(false)\n  }\n\n  return (\n    <Modal onClose={handleClose} open={open}>\n      <BoxComponent\n        sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          boxShadow: 24,\n          backgroundColor: 'background.paper',\n          borderRadius: '1rem',\n          p: '3rem 4rem 3rem 3rem',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1 }}>\n          <CredentialIcon />\n        </Avatar>\n        <TypographyComponent variant=\"h5\">\n          Issue a Cornerstone Credential\n        </TypographyComponent>\n        <Divider />\n        <FormikComponent\n          initialValues={{\n            email: '',\n            id_number: '',\n            surname: '',\n            forenames: '',\n            gender: '',\n            date_of_birth: '',\n            country_of_birth: '',\n          }}\n          validate={idValidation}\n          onSubmit={(values, { resetForm }) => {\n            sendOffer(values)\n            // resetForm()\n          }}\n        >\n          {({ values, handleChange, touched, errors }) => (\n            <FormComponent>\n              <div>\n                <TextFieldComponent\n                  error={touched.id_number && Boolean(errors.id_number)}\n                  helperText={touched.id_number && errors.id_number}\n                  id=\"id_number\"\n                  name=\"id_number\"\n                  value={values.id_number}\n                  onChange={handleChange}\n                  label=\"ID Number\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n\n                <TextFieldComponent\n                  id=\"forenames\"\n                  name=\"forenames\"\n                  value={values.forenames}\n                  onChange={handleChange}\n                  label=\"Forenames\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n              </div>\n\n              <div>\n                <TextFieldComponent\n                  id=\"surname\"\n                  name=\"surname\"\n                  value={values.surname}\n                  onChange={handleChange}\n                  label=\"Surname\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n                <TextFieldComponent\n                  id=\"gender\"\n                  name=\"gender\"\n                  // value={values.gender}\n                  value={\n                    (values.gender =\n                      values.id_number.substring(6, 7) > 4 ? 'Male' : 'Female')\n                  }\n                  onChange={handleChange}\n                  label=\"Gender\"\n                  sx={{ m: '1rem' }}\n                  required\n                  disabled\n                />\n              </div>\n\n              <div>\n                <TextFieldComponent\n                  id=\"date_of_birth\"\n                  name=\"date_of_birth\"\n                  // type=\"date\"\n                  // value={values.date_of_birth}\n                  value={\n                    (values.date_of_birth =\n                      values.id_number.substring(0, 1) > 2\n                        ? '19' +\n                          values.id_number.substring(0, 2) +\n                          '-' +\n                          values.id_number.substring(2, 4) +\n                          '-' +\n                          values.id_number.substring(4, 6)\n                        : '20' +\n                          values.id_number.substring(0, 2) +\n                          '-' +\n                          values.id_number.substring(2, 4) +\n                          '-' +\n                          values.id_number.substring(4, 6))\n                  }\n                  onChange={handleChange}\n                  label=\"D.O.B\"\n                  // sx={{ m: '1rem', width: '15rem' }}\n                  sx={{ m: '1rem' }}\n                  required\n                  // InputLabelProps={{\n                  //   shrink: true,\n                  // }}\n                  disabled\n                />\n\n                <TextFieldComponent\n                  id=\"country_of_birth\"\n                  name=\"country_of_birth\"\n                  value={\n                    (values.country_of_birth =\n                      values.id_number.substring(10, 11) === '0'\n                        ? 'South Africa'\n                        : '')\n                  }\n                  onChange={handleChange}\n                  label=\"Country of Birth\"\n                  sx={{ m: '1rem' }}\n                  required\n                  disabled={values.id_number.substring(10, 11) === '0'}\n                />\n              </div>\n\n              <div>\n                <TextFieldComponent\n                  id=\"email\"\n                  name=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  label=\"Email\"\n                  sx={{ m: '1rem' }}\n                  required\n                />\n              </div>\n\n              <div>\n                <ButtonComponent\n                  variant=\"contained\"\n                  type=\"submit\"\n                  sx={{ color: '#fff', m: '1rem' }}\n                  disabled={submitting}\n                >\n                  Send\n                </ButtonComponent>\n              </div>\n            </FormComponent>\n          )}\n        </FormikComponent>\n\n        {success ? <QRCode value={data.credential} /> : ''}\n      </BoxComponent>\n    </Modal>\n  )\n}\n\nexport default CredentialModal\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport MaterialTable from '@material-table/core'\nimport {\n  Badge as CredentialIcon,\n  Refresh as RefreshIcon,\n} from '@mui/icons-material'\nimport { toast } from 'react-toastify'\n// components\nimport TypographyComponent from '../../components/Typography'\nimport CredentialModal from './modal'\n\nconst ConnectionsPage = () => {\n  const [data, setData] = useState([])\n  const [open, setOpen] = useState(false)\n  const [connectionId, setConnectionId] = useState('')\n\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n\n  useEffect(() => {\n    let apiURL = '/api/v1/cornerstone/issuer/connections'\n\n    if (process.env.API_BASE_URL) {\n      apiURL = process.env.API_BASE_URL + '/cornerstone/issuer/connections'\n    }\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      axios\n        .get(process.env.REACT_APP_API_URL + 'connections?state=active')\n        .then(response => {\n          setData(response.data)\n        })\n        .catch(error => console.log(error))\n    } else {\n      axios\n        .get(apiURL + '?state=active')\n        .then(response => {\n          setData(response.data)\n        })\n        .catch(error => console.log(error))\n    }\n  }, [])\n\n  const refreshConnections = async () => {\n    let apiURL = '/api/v1/cornerstone/issuer/connections'\n\n    if (process.env.API_BASE_URL) {\n      apiURL = process.env.API_BASE_URL + '/cornerstone/issuer/connections'\n    }\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      await toast.promise(\n        axios\n          .get(process.env.REACT_APP_API_URL + 'connections?state=active')\n          .then(response => {\n            setData(response.data)\n            toast.success('Refreshed connections!')\n          })\n          .catch(error => console.log(error)),\n        {\n          pending: 'Refreshing...',\n        }\n      )\n    } else {\n      await toast.promise(\n        axios\n          .get(apiURL + '?state=active')\n          .then(response => {\n            setData(response.data)\n            toast.success('Refreshed connections!')\n          })\n          .catch(error => console.log(error)),\n        {\n          pending: 'Refreshing...',\n        }\n      )\n    }\n  }\n\n  const renderModal = (\n    <CredentialModal\n      connectionId={connectionId}\n      handleClose={handleClose}\n      open={open}\n    />\n  )\n\n  return (\n    <div style={{ margin: '2rem' }}>\n      <MaterialTable\n        style={{ padding: '1rem' }}\n        title={\n          <TypographyComponent\n            variant=\"h5\"\n            sx={{ textDecoration: 'underline' }}\n          >\n            Connections\n          </TypographyComponent>\n        }\n        data={data}\n        columns={[\n          {\n            title: <TypographyComponent variant=\"h6\">Name</TypographyComponent>,\n            field: 'their_label',\n          },\n          {\n            title: (\n              <TypographyComponent variant=\"h6\">\n                Connected On\n              </TypographyComponent>\n            ),\n            field: 'created_at',\n            type: 'datetime',\n          },\n          {\n            title: (\n              <TypographyComponent variant=\"h6\">\n                Connection ID\n              </TypographyComponent>\n            ),\n            field: 'connection_id',\n          },\n          {\n            title: (\n              <TypographyComponent variant=\"h6\">\n                Connection State\n              </TypographyComponent>\n            ),\n            field: 'state',\n          },\n        ]}\n        actions={[\n          {\n            icon: () => <RefreshIcon />,\n            tooltip: 'Refresh connections',\n            isFreeAction: true,\n            onClick: () => refreshConnections(),\n          },\n          rowData => ({\n            icon: () => <CredentialIcon />,\n            tooltip: 'Issue Credential',\n            onClick: () => {\n              handleOpen()\n              setConnectionId(rowData.connection_id)\n            },\n          }),\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n        }}\n      />\n      {renderModal}\n    </div>\n  )\n}\n\nexport default ConnectionsPage\n"],"names":["alt","children","component","src","sx","color","disabled","endIcon","onClick","size","startIcon","type","variant","initialValues","onSubmit","validate","defaultValue","error","focused","fullWidth","helperText","id","InputLabelProps","label","name","onChange","props","required","value","align","idValidation","data","errors","id_number","connectionId","handleClose","open","useState","submitting","setSubmitting","success","setSuccess","setData","sendOffer","apiURL","process","API_BASE_URL","toast","axios","then","response","catch","msg","pending","Modal","onClose","Box","position","top","left","transform","boxShadow","backgroundColor","borderRadius","p","display","flexDirection","alignItems","justifyContent","textAlign","Avatar","m","Typography","Divider","Formik","email","surname","forenames","gender","date_of_birth","country_of_birth","values","resetForm","handleChange","touched","Form","TextField","Boolean","substring","Button","credential","setOpen","setConnectionId","useEffect","console","log","refreshConnections","renderModal","style","margin","padding","title","textDecoration","columns","field","actions","icon","Refresh","tooltip","isFreeAction","rowData","connection_id","options","actionsColumnIndex"],"sourceRoot":""}